webpackHotUpdate(0,{

/***/ 85:
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader?sourceMap!./node_modules/vue-loader/lib/style-compiler?{"vue":true,"id":"data-v-0a3e1d76","scoped":false,"hasInlineConfig":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/game.vue ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ 86)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"game.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvZ2FtZS52dWU/OTE3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHRydWUpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXFxuXCIsIFwiXCIsIHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcImZpbGVcIjpcImdhbWUudnVlXCIsXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj9zb3VyY2VNYXAhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtMGEzZTFkNzZcIixcInNjb3BlZFwiOmZhbHNlLFwiaGFzSW5saW5lQ29uZmlnXCI6ZmFsc2V9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9zcmMvcGFnZXMvZ2FtZS52dWVcbi8vIG1vZHVsZSBpZCA9IDg1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///85\n");

/***/ }),

/***/ 90:
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/pages/game.vue ***!
  \**************************************************************************************************************************/
/*! dynamic exports provided */
/*! all exports used */
/***/ (function(module, exports) {

eval("//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst l = v => console.log(v);\n\n//firebase\nlet db = {};\ndocument.addEventListener('DOMContentLoaded', () => db = firebase.database());\n\n//Vue\nconst vm = new Vue({\n  el: '#main',\n  data: {\n    roomId: '',\n    id: '',\n    ref: {},\n    sync: {\n      host: '',\n      guest: '',\n\n      turn: -1,\n      judgment: -1,\n      board: [],\n\n      timestamp: 0\n    }\n  },\n  created: function () {\n    this.initGame();\n  },\n  computed: {\n    view: function () {\n      return !this.id ? 'lobby' : 'game';\n    },\n    mark: function () {\n      return this.id == this.sync.host ? 0 : 1;\n    }\n  },\n  methods: {\n    //初期化\n    initGame: function () {\n      this.sync.board = [[3, 3, 3, 3, 3], [3, 2, 2, 2, 3], [3, 2, 2, 2, 3], [3, 2, 2, 2, 3], [3, 3, 3, 3, 3]];\n      this.sync.turn = Math.round(Math.random());\n      this.sync.judgment = -1;\n    },\n\n    //部屋作成\n    createRoom: async function () {\n      //Guestが来るまで操作出来ないようにturnを-1に\n      this.sync.turn = -1;\n\n      //id生成\n      this.id = this.createId();\n      this.sync.host = this.id;\n      this.roomId = this.id.substr(4);\n\n      //DB参照\n      this.ref = db.ref('/ox/' + this.roomId);\n      //対象room情報取得\n      const snapshot = await this.ref.once('value');\n      //既に部屋があったらリトライ\n      if (snapshot.val()) {\n        this.createRoom();return;\n      }\n\n      //timestamp\n      this.sync.timestamp = moment(new Date()).format('YYYY/MM/DD HH:mm:ss');\n      //DB更新\n      this.ref.set(this.sync);\n      //DBイベント定義\n      this.setPush();\n    },\n\n    //部屋に入る\n    goRoom: async function () {\n      //空入力チェック\n      if (this.roomId == '') {\n        alert('no room!');return;\n      }\n\n      //DB参照\n      this.ref = db.ref('/ox/' + this.roomId);\n      //対象room情報取得\n      const snapshot = await this.ref.once('value');\n      //部屋あるかチェック\n      if (!snapshot.val()) {\n        alert('no room!');return;\n      }\n\n      //DB情報取得\n      this.sync = snapshot.val();\n      //既にguestがいるかチェック\n      if (this.sync.guest != '') {\n        alert('this room is no vacancy!');return;\n      }\n\n      //guest id生成、hostと被ったら再生成\n      let count = 0;\n      do {\n        this.id = this.createId();\n      } while (this.id == this.sync.host && count < 5);\n      if (count == 5) {\n        alert('error!');return;\n      }\n\n      //guest更新\n      this.sync.guest = this.id;\n      //turn値をランダム取得\n      this.sync.turn = Math.round(Math.random());\n\n      //DB更新\n      this.ref.set(this.sync);\n      //DBイベント定義\n      this.setPush();\n    },\n\n    //DBイベント定義\n    setPush: function () {\n      this.ref.on('value', function (snapshot) {\n        //DBデータをローカルへ反映\n        vm.sync = snapshot.val();\n        //終了判定\n        vm.gemaSet();\n      });\n    },\n\n    //\n    put: function (x, y) {\n      //置けるかチェック\n      if (!this.checkPut(x, y)) return;\n\n      //マーク付け\n      this.sync.board[x][y] = this.sync.turn;\n      //勝敗判定\n      this.sync.judgment = this.judge(x, y);\n      //ターン交代\n      this.sync.turn = 1 - this.sync.turn;\n\n      //DB更新\n      this.ref.set(this.sync);\n    },\n\n    //置けるかチェック\n    checkPut: function (x, y) {\n      //自分の番じゃなければ処理せず\n      if (this.sync.turn != this.mark) return false;\n      //空白以外を押しても処理せず\n      if (this.sync.board[x][y] != 2) return false;\n      return true;\n    },\n\n    //勝敗判定\n    judge: function (x, y) {\n      //勝敗判定\n      for (let dx = -1; dx <= 1; dx++) {\n        for (let dy = -1; dy <= 1; dy++) {\n          if (dx == 0 && dy == 0) continue;\n          let count = 0;\n          let k = 1;\n          while (this.sync.board[x + k * dx][y + k * dy] <= 1) {\n            if (this.sync.board[x + k * dx][y + k * dy] == this.sync.turn) {\n              k = 1;\n              while (this.sync.board[x + k * dx][y + k * dy] == this.sync.turn) {\n                count++;\n                k++;\n              }\n              k = 1;\n              while (this.sync.board[x + -k * dx][y + -k * dy] == this.sync.turn) {\n                count++;\n                k++;\n              }\n              break;\n            }\n            k++;\n          }\n          if (count == 2) return this.mark;\n        }\n      }\n      //押す場所がなくなった判定\n      if (this.sync.board.join('').indexOf(2) == -1) return 2;\n      //上記以外\n      return -1;\n    },\n\n    //終了判定\n    gemaSet: function () {\n      //既定値なら何もせず\n      if (this.sync.judgment == -1) return;\n\n      //盤面操作無効化\n      this.sync.turn = -1;\n\n      //chrome用にwait\n      setTimeout(function () {\n        //勝敗出力\n        switch (vm.sync.judgment) {\n          case vm.mark:\n            alert('you win!');break;\n          case 1 - vm.mark:\n            alert('you lose!');break;\n          case 2:\n            alert('draw!');\n        }\n\n        //host側で初期化\n        if (vm.mark == 0) {\n          //初期化\n          vm.initGame();\n          //DBも初期化\n          vm.ref.set(vm.sync);\n        }\n      }, 10);\n    },\n\n    //id生成\n    createId: () => String(Math.random()).substr(2, 8),\n\n    //配列、数値をOXに変換\n    parseOX: val => {\n      if (val == 0) return 'O';\n      if (val == 1) return 'X';\n    }\n\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///90\n");

/***/ })

})